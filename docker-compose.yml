services:
  web:
    build: .
    env_file: .env
    ports:
      - "0.0.0.0:5002:5000"
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=src.config.DockerDevelopmentConfig
      - PYTHONPATH=/app/src
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - minio

  db:
    build: 
      context: ./database 
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    command: postgres -c 'max_connections=200'
    environment:
      POSTGRES_USER: custom_user
      POSTGRES_PASSWORD: strong_password
      POSTGRES_DB: catalog_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U custom_user -d catalog_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  minio:
    image: minio/minio
    ports:
      - "0.0.0.0:9000:9000"
      - "0.0.0.0:9001:9001"
    environment:
      - MINIO_ACCESS_KEY=minioaccess
      - MINIO_SECRET_KEY=miniosecret
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  celery-worker:
    build: .
    env_file: .env
    command: celery -A src.catalog.tasks.celery_app worker -Q document_processing,analysis,celery --loglevel=info
    volumes:
      - .:/app
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=src.config.DockerDevelopmentConfig
      - PYTHONPATH=/app/src
    depends_on:
      - redis
      - db
      - minio

  celery-beat:
    build: .
    env_file: .env
    command: celery -A src.catalog.tasks.celery_app beat --loglevel=info
    volumes:
      - .:/app
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=src.config.DockerDevelopmentConfig
      - PYTHONPATH=/app/src
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
  minio_data:
  redis_data:
